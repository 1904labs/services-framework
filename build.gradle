apply plugin: 'java'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'distribution'

    group = 'io.tsdb'
    version = '0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    description = "boatyui"

    configurations {
        providedCompile
        compile.extendsFrom providedCompile
    }

    ext {
        jettyVersion = '9.4.8.v20171121'
        jerseyVersion = '2.26'
        guiceVersion = '4.1.0'
        resteasyVersion = '3.1.4.Final'
        dropwizardVersion = '4.0.2'
        logbackVersion = '1.2.3'
        slf4jVersion = '1.7.25'
        shiroVersion = '1.4.0'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
        jcenter()
        maven { url "http://repo.maven.apache.org/maven2" }
        mavenCentral()
    }

    findbugsMain {
        reports {
            xml.enabled = true
            html.enabled = false
        }
        ignoreFailures = true
    }

    findbugsTest {
        reports {
            xml.enabled = true
            html.enabled = false
        }
        ignoreFailures = true
    }

    checkstyle {
        configFile = rootProject.file('checkstyle/checkstyle.xml')
        showViolations = false
        checkstyleMain.exclude '**/gensrc/**'
    }


    task('printVersion') {
        doLast {
            println project.version
        }
    }

    jar {
    }
}

task copyJars(type: Copy) {
    from subprojects.collect { it.tasks.withType(Jar) }
    into "$buildDir/install/lib"
}

task assembleBinary(type: Copy) {
    from "${rootProject.projectDir}/src/main/dist/run"
    into "${rootProject.buildDir}/install/bin/"
}

/*
 * Note, do NOT remove the exclude *.properties, we do not want centralstation.properties or other random
 * property files from our code getting deployed in a build.
 * Please manually include a properties file you want to distribute, not, doing this is probably a red-flag and
 * the best practie will probably be to update the production centralstation.properties managed by Puppet.
 */

subprojects {
/*
    task assembleDistWebRoot(type: Copy) {
        from "${project.projectDir}/src/main/resources/webroot"
        into "${rootProject.buildDir}/install/webroot/"
    }

    task assembleDistWebRootProjectDir(type: Copy) {
        from "${project.projectDir}/src/main/resources/webroot/${project.name}"
        into "${rootProject.buildDir}/install/webroot/${project.name}/"
    }
*/
    task assembleDistBin(dependsOn: assembleBinary, type: Copy) {
        from "${project.buildDir}/install/${project.name}/bin/${project.name}"
        into "${rootProject.buildDir}/install/bin/"
    }

    task assembleDistLibs(type: Copy) {
        from "${project.buildDir}/install/${project.name}/lib/"
        include '*.jar'
        into "${rootProject.buildDir}/install/lib/"
    }

    task assembleDistConfig(type: Copy) {
        from "${project.projectDir}/src/main/resources/"
        exclude 'application.properties'
        include '*.xml'
        include '*.properties'
        into "${rootProject.buildDir}/install/config/"
    }
/*
    Task assembleDistPKI(type: Copy) {
        from "${project.buildDir}/install/${project.name}/"
        include 'stunnel.infra.perspica.io.key.pkcs8'
        include 'stunnel.infra.perspica.io.key.pem'
        include 'stunnel.infra.perspica.io.cert.pem'
        include 'techops.infra.perspica.io.key.pem'
        include 'techops.infra.perspica.io.cert.pem'
        include 'ca-chain.cert.pem'
        include 'jssecacert'
        into "${rootProject.buildDir}/install/config/"
    }
*/
}

project(':base') {
    dependencies {
        compile project(':common')
        compile group: 'org.eclipse.jetty', name: 'jetty-server', version: "${rootProject.ext.jettyVersion}"
        compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: "${rootProject.ext.jettyVersion}"
        compile group: 'org.eclipse.jetty', name: 'apache-jsp', version: "${rootProject.ext.jettyVersion}"
        compile group: 'jstl', name: 'jstl', version: '1.2'
        compile group: 'org.jboss.resteasy', name: 'resteasy-jaxrs', version: "${rootProject.ext.resteasyVersion}"
        compile group: 'org.jboss.resteasy', name: 'resteasy-guice', version: "${rootProject.ext.resteasyVersion}"
        compile group: 'org.jboss.resteasy', name: 'resteasy-jackson-provider', version: "${rootProject.ext.resteasyVersion}"
        compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
        compile group: 'com.google.inject.extensions', name: 'guice-servlet', version: "${rootProject.ext.guiceVersion}"
        compile group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: "${rootProject.ext.guiceVersion}"
        compile group: 'com.google.inject.extensions', name: 'guice-multibindings', version: "${rootProject.ext.guiceVersion}"
        compile group: 'org.apache.shiro', name: 'shiro-web', version: "${rootProject.ext.shiroVersion}"
        compile group: 'org.apache.shiro', name: 'shiro-crypto-core', version: '1.4.0'
        compile(group: 'org.apache.shiro', name: 'shiro-guice', version: "${rootProject.ext.shiroVersion}") {
            exclude group: 'com.google.inject', module: 'guice'
            exclude group: 'com.google.inject.extensions', module: 'guice-multibindings'
            exclude group: 'com.google.inject.extensions', module: 'guice-assistedinject'
        }
        compile group: 'org.reflections', name: 'reflections', version: '0.9.11'
    }
}

project(':common') {
    dependencies {
        compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: "${rootProject.ext.dropwizardVersion}"
        compile group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: "${rootProject.ext.dropwizardVersion}"
        compile group: 'io.dropwizard.metrics', name: 'metrics-graphite', version: "${rootProject.ext.dropwizardVersion}"
        compile group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: "${rootProject.ext.dropwizardVersion}"
        compile group: 'io.dropwizard.metrics', name: 'metrics-jetty9', version: "${rootProject.ext.dropwizardVersion}"
        compile group: 'io.dropwizard.metrics', name: 'metrics-logback', version: "${rootProject.ext.dropwizardVersion}"
        compile group: 'ch.qos.logback', name: 'logback-classic', version: "${rootProject.ext.logbackVersion}"
        compile group: 'ch.qos.logback', name: 'logback-access', version: "${rootProject.ext.logbackVersion}"
        compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.11'
        compile group: 'org.slf4j', name: 'slf4j-api', version: "${rootProject.ext.slf4jVersion}"
        compile group: 'org.slf4j', name: 'jul-to-slf4j', version: "${rootProject.ext.slf4jVersion}"
        compile group: 'com.google.guava', name: 'guava', version: '18.0'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
        compile group: 'org.apache.commons', name: 'commons-configuration2', version: '2.2'
        compile group: 'com.orbitz.consul', name: 'consul-client', version: '1.0.1'
        testCompile(group: 'junit', name: 'junit', version: '4.12') {
            exclude(module: 'hamcrest-core')
        }
        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    }
}

project('common-nifi') {
    dependencies {
        compile project(':common')
        compile project(':nifi-api-client')
    }
}

project('nifiadmin') {
    apply plugin: 'application'
    mainClassName = "io.tsdb.nifiadmin.main.Main"
    dependencies {
        compile project(':base')
        compile project(':common-nifi')
    }
}

project('stats') {
    apply plugin: 'application'
    mainClassName = "io.tsdb.stats.main.Main"
    dependencies {
        compile project(':base')
    }
}

project('nifi-api-client') {
    dependencies {
        compile 'io.swagger:swagger-annotations:1.5.8'
        compile 'com.squareup.okhttp:okhttp:2.7.5'
        compile 'com.squareup.okhttp:logging-interceptor:2.7.5'
        compile 'com.google.code.gson:gson:2.6.2'
        compile 'joda-time:joda-time:2.9.3'
        testCompile 'junit:junit:4.12'
    }
}